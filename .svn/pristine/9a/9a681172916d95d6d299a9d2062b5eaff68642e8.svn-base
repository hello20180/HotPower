package com.hnzy.hot.sbgls.controller;

import java.io.UnsupportedEncodingException;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.apache.ibatis.annotations.Param;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSONObject;
import com.hnzy.hot.sbgl.pojo.Yh;
import com.hnzy.hot.sbgls.service.RbsglService;

@Controller
@RequestMapping("RbsglController")
public class RbsglController {

	private List<Yh> yhInfoList;
	@Autowired
	private RbsglService rbsglService;

	@RequestMapping("searchInfo")
	@ResponseBody
	public JSONObject searchInfo(HttpServletRequest request, ModelMap map, @Param("xqName") String xqName,
			@Param("buildNo") int buildNo, @Param("cellNo") int cellNo, @Param("houseNo") Integer houseNo)
			throws UnsupportedEncodingException {
		xqName = new String(xqName.getBytes("ISO-8859-1"), "utf-8") + "";
		request.setAttribute("houseNo", houseNo);
		request.setAttribute("xqName", xqName);
		request.setAttribute("buildNo", buildNo);
		request.setAttribute("cellNo", cellNo);
		JSONObject jsonObject = new JSONObject();
		if (houseNo == null) {
			houseNo = 0;
			jsonObject.put("findList", rbsglService.searchInfo(xqName, buildNo, cellNo, houseNo));
		}
		// 小区名称
		yhInfoList = rbsglService.findYhNameList();
		// 列表
		jsonObject.put("findList", rbsglService.searchInfo(xqName, buildNo, cellNo, houseNo));
		return jsonObject;
	}

	// 获取所有的小区
	@RequestMapping("findYhNameList")
	public String findYhNameList(@RequestParam(value = "pageNum", required = false) String pageNum, ModelMap map) {
		yhInfoList = rbsglService.findYhNameList();
		List<Yh> findList = rbsglService.findList();
		map.addAttribute("yhInfoList", yhInfoList);
		map.addAttribute("findList", findList);
		return "sbgls/rbgl";
	}

	// 根据小区获取楼栋号
	@RequestMapping("findYhBuildNObyXqName")
	@ResponseBody
	public JSONObject findYhBuildNObyXqName(String xqName) throws UnsupportedEncodingException {
		xqName = new String(xqName.getBytes("ISO-8859-1"), "utf-8") + "";
		yhInfoList = rbsglService.findYhBuildNObyXqName(xqName);
		for (int i = 0; i < yhInfoList.size(); i++) {
			System.out.println(yhInfoList.get(i).getBuildNO());
		}
		JSONObject jsonObject = new JSONObject();
		if (yhInfoList != null) {
			jsonObject.put("xqlist", yhInfoList);
		} else {
			jsonObject.put("fail", null);
		}
		return jsonObject;
	}

	// 根据小 区楼栋号获取单元号
	@RequestMapping("findYhCellNOByBuild")
	@ResponseBody
	public JSONObject findYhCellNOByBuild(@Param("build") int build, @Param("xqName") String xqName)
			throws UnsupportedEncodingException {
		xqName = new String(xqName.getBytes("ISO-8859-1"), "utf-8") + "";
		yhInfoList = rbsglService.findYhCellNOByBuild(xqName, build);
		JSONObject jsonObject = new JSONObject();
		if (yhInfoList != null) {
			jsonObject.put("cellList", yhInfoList);
		} else {
			jsonObject.put("fail", null);
		}
		return jsonObject;

	}

	public List<Yh> getYhInfoList() {
		return yhInfoList;
	}

	public void setYhInfoList(List<Yh> yhInfoList) {
		this.yhInfoList = yhInfoList;
	}
}
