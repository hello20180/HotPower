package com.hnzy.hot.nhfx.controller;


import java.io.UnsupportedEncodingException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.ibatis.annotations.Param;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSONArray;
import com.hnzy.hot.nhfx.pojo.HeatStationHistory;
import com.hnzy.hot.nhfx.service.HeatStationHistoryService;
import com.hnzy.hot.sjbb.pojo.YhInfo;
import com.hnzy.hot.sjbb.service.YhInfoService;

@Controller
@RequestMapping("MjnhController")
public class MjnhController {
	@Autowired
	private YhInfoService yhInfoService;
	@Autowired
    private HeatStationHistoryService heatStationHistoryService;
	private List<YhInfo> yhInfoList;
	public  List<HeatStationHistory> heatStationHistoryList;
	// 获取所有的小区
			@RequestMapping("findYhNameList")
			public String findYhNameList(ModelMap map,HttpServletRequest request, YhInfo yhInfo,@Param("xqName")String xqName)
			{
				yhInfoList = yhInfoService.findYhNameList();
				map.addAttribute("yhInfoList", yhInfoList);

				return "nhfx/mjnhfx";
			}
			
			@RequestMapping("HeatAreaByxqName")
			@ResponseBody
			public Map<String, Object> HeatAreaByxqName(@Param("xqName")String xqName , @Param("readTime1") String readTime1,
					@Param("readTime2") String readTime2) throws UnsupportedEncodingException{
				Map<String, Object> map=new HashMap<>();
				xqName=new String(xqName.getBytes("ISO-8859-1"),"utf-8")+"";
				//根据小区查找供热面积
				int sumHeat=yhInfoService.HeatAreaByxqName(xqName);
				List<HeatStationHistory> heatStationHistoryList=heatStationHistoryService.sumYlHeat(xqName, readTime1, readTime2);
		
				JSONArray json=new JSONArray();
				for(int i=0;i<heatStationHistoryList.size();i++){
					JSONArray jsonArray=new JSONArray();
					Date heatTime=heatStationHistoryList.get(i).getReadTime();
					
					SimpleDateFormat fimpleDataForma=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
					
					String data=fimpleDataForma.format(heatTime);
                    Double ylHeat=heatStationHistoryList.get(i).getYlHeat();
					Double JHeat=ylHeat/sumHeat;
					jsonArray.add(data);
					jsonArray.add(JHeat);
					json.add(jsonArray);
				}				
				map.put("data",json);
				return  map;
			}
			
			public List<YhInfo> getYhInfoList() {
				return yhInfoList;
			}
			public void setYhInfoList(List<YhInfo> yhInfoList) {
				this.yhInfoList = yhInfoList;
			}
			public List<HeatStationHistory> getHeatStationHistoryList() {
				return heatStationHistoryList;
			}
			public void setHeatStationHistoryList(List<HeatStationHistory> heatStationHistoryList) {
				this.heatStationHistoryList = heatStationHistoryList;
			}
			
	
}
